{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/Section/Section.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","form","label","type","onChange","input","button","Component","propType","PropTypes","func","ContactList","contacts","onDeleteContact","list","map","contact","item","bullet","onClick","id","array","Filter","propTyper","string","App","filter","formSubmitHandler","data","find","toLowerCase","alert","uuidv4","changeFilter","deleteContacts","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","visiableContacts","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b31802ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__15u_E\",\"label\":\"ContactForm_label__1AOGX\",\"input\":\"ContactForm_input__2UdQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3YrCq\",\"item\":\"ContactList_item__3XFzh\",\"button\":\"ContactList_button__3VgxY\",\"bullet\":\"ContactList_bullet__3ldJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__yyR79\",\"input\":\"Filter_input__2aNbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1pGP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ae8k\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div className={s.section}>\r\n            <h1>{title}</h1>\r\n                {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from \"./ContactForm.module.css\"\r\n\r\nclass ContactForm extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name] : value });\r\n    };\r\n\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state)\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n                <form onSubmit={this.handleSubmit} className={s.form}>\r\n                    <label className={s.label}>\r\n                        Name:\r\n                        <input\r\n                            type=\"text\"\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            className={s.input} />\r\n                    </label>\r\n                    <label className={s.label}>\r\n                        Number:\r\n                        <input\r\n                            type=\"phonenumber\"\r\n                            name='number'\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            className={s.input} />\r\n                    </label>\r\n                    \r\n                    <button type=\"submit\" className={s.button}>Add contact</button>\r\n                </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propType = {\r\n    onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types'\r\nimport s from './ContactList.module.css'\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n    return ( \r\n        <ul className={s.list}> \r\n            {contacts.map(contact => (\r\n                <li key={contact.id} className={s.item}>\r\n                    <span className={s.bullet}/>\r\n                    {contact.name}: {contact.number}\r\n                    <button onClick={ () => onDeleteContact(contact.id)} className={s.button}>Delete</button>\r\n                </li>)\r\n            )} \r\n        </ul>\r\n    ) \r\n}\r\n\r\nContactList.propType = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n}","import PropTypes from 'prop-types'\r\nimport s from './Filter.module.css'\r\n\r\nexport default function Filter({value, onChange}) {\r\n        return (\r\n        <>\r\n                <label className={s.label}>\r\n                Find contacts by name\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={s.input}/>\r\n            </label>\r\n        </>\r\n    )\r\n}\r\n\r\nFilter.propTyper = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n}","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport s from './App.module.css'\nimport Section from './components/Section'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport ContactList from \"./components/ContactList\"\nimport Filter from \"./components/Filter\"\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n         ],\n    filter: ''\n  }\n\n  formSubmitHandler = data => {\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\n      alert(`${data.name} is already in contacts`);\n      return\n    } else if (data.name === ''){\n      alert(`Name field are empty`);\n      return\n    } else if (data.number === ''){\n      alert(`Number field are empty`);\n      return\n    }\n    \n    this.setState({ contacts: [{ name: data.name, id: uuidv4(), number: data.number }, ...this.state.contacts,] })\n  }\n\n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  deleteContacts = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n \n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render() {\n\n    const normalizedFilter = this.state.filter.toLowerCase()\n\n    const visiableContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n  \n    return (\n      <div className={s.container}>\n        <Section title='Phonebook'>\n          <ContactForm onSubmit={this.formSubmitHandler}/>\n        </Section>\n        <Section title='Contacts'>\n          <Filter value={this.state.filter} onChange={this.changeFilter}/>\n          <ContactList contacts={visiableContacts} onDeleteContact={this.deleteContacts}/>\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}